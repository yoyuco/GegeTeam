name: Supabase Deploy

on:
  push:
    branches: [develop, main]
    paths:
      - "supabase/**"
  workflow_dispatch:

concurrency:
  group: supabase-${{ github.ref }}
  cancel-in-progress: true

jobs:
  staging:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with: { version: latest }
      - name: Link STAGING
        run: supabase link --project-ref $SUPABASE_STAGING_REF
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_STAGING_REF: ${{ secrets.SUPABASE_STAGING_REF }}
      - name: DB push
        run: supabase db push
        env: { SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }} }
      - name: Deploy functions
        shell: bash
        env: { SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }} }
        run: |
          for d in supabase/functions/*; do
            [ -d "$d" ] || continue
            fn=$(basename "$d")
            supabase functions deploy "$fn"
          done

  production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with: { version: latest }
      - name: Link PROD
        run: supabase link --project-ref $SUPABASE_PROD_REF
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROD_REF: ${{ secrets.SUPABASE_PROD_REF }}
      - name: DB push
        run: supabase db push
        env: { SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }} }
      - name: Deploy functions
        shell: bash
        env: { SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }} }
        run: |
          for d in supabase/functions/*; do
            [ -d "$d" ] || continue
            fn=$(basename "$d")
            supabase functions deploy "$fn"
          done
